
import os.path

Import('context')

context.module(
        name = "LocalLeaderUnitTest",
        srcs = context.split("""
		main.cpp
		../../osmServer/service_config_reader.cpp
		../../osmServer/main_thread_handler.cpp
		hfs_checkerMOCK.cpp
		../../osmServer/utils.cpp
		../../osmServer/osm_timer.cpp
		../../osmServer/file_handler.cpp
		../../osmServer/msg_parser.cpp 	
		../../osmServer/osm_info_file.cpp
		../../osmServer/ring_file.cpp
		../../osmServer/listener.cpp
		../../localLeader/monitoring_manager.cpp
		../../localLeader/monitor_status_map.cpp
		../../localLeader/election_identifier.cpp
		../../localLeader/service_startup_manager.cpp
		../../localLeader/ll_msg_handler.cpp
		../../localLeader/local_leader.cpp
		../../localLeader/recovery_handler.cpp
		../../localLeader/election_manager.cpp
		../../globalLeader/gl_msg_handler.cpp
		../../globalLeader/global_leader.cpp 
		../../globalLeader/component_balancing.cpp
		../../globalLeader/state_change_initiator.cpp
		../../globalLeader/journal_writer.cpp
		../../globalLeader/cluster_recovery_component.cpp
		../../globalLeader/journal_reader.cpp
		../../globalLeader/journal_library.cpp
		../../globalLeader/monitoring.cpp
		../../globalLeader/component_manager.cpp
		../../../communication/callback.cpp
		../../../communication/unittest/communicationMOCK.cpp
		../../../communication/communication_helper.cpp
		../../../communication/http_handler.cpp
		../../../communication/message_binding.pb.cc
		../../../communication/message.cpp
		../../../communication/message_format_handler.cpp
		../../../communication/unittest/message_interface_handlersMOCK.cpp
		../../../communication/message_result_wrapper.cpp
		../../../communication/message_type_enum.pb.cc
		../../../communication/msg_external_interface.cpp
		../../../communication/stubs.cpp
		../../../libraryUtils/record_structure.cpp
		../../../libraryUtils/file_handler.cpp
		../../../libraryUtils/serialize.cpp
		../../../libraryUtils/osd_logger_initialize.cpp
		../../../libraryUtils/object_storage_log_setup.cpp

		monitoring_managerTest.cpp
		monitor_statusTest.cpp
		service_startupTest.cpp
		recovery_managerTest.cpp
		ll_msg_handlerTest.cpp
		local_leaderTest.cpp
		election_managerTest.cpp		
		election_identifierTest.cpp

	"""),
        targetType = context.TYPE_EXE,
        libs = context.split("""
		libraryUtils
		protobuf
		#communication
                #any external libs  that you may need.
        """),
        wholeLibs = context.split("""
               gmock
        """),
        requiredLibs = context.split("""
                boost_python
                boost_filesystem
		python2.6
		cool
		rt
		dl
		util
		
        """)
)

